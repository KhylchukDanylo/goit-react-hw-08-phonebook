{"version":3,"file":"static/js/700.8db337f0.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  max-width: 640px;\n`;\n","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter.text;\n","import { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { TextField, Button } from '@mui/material';\nimport { selectContacts } from 'redux/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name.trim())) {\n      return;\n    }\n    dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleAddContact}>\n      <TextField\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        autoComplete=\"off\"\n        placeholder=\"Enter contact name\"\n        margin={'normal'}\n        label=\"Name\"\n      />\n\n      <TextField\n        value={number}\n        onChange={handleChange}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        autoComplete=\"off\"\n        placeholder=\"111-111-1111\"\n        label=\"Number\"\n        margin={'normal'}\n      />\n\n      <Button\n        type=\"submit\"\n        size=\"large\"\n        sx={{ mt: 3, border: '1px solid black' }}\n      >\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport {\n  List,\n  ListItem,\n  Avatar,\n  Typography,\n  CircularProgress,\n  IconButton,\n} from '@mui/material';\nimport { MdDelete } from 'react-icons/md';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts, isLoading, error } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const getFirstLetter = name => {\n    return name.charAt(0).toUpperCase();\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <List sx={{ padding: '20px' }}>\n      {isLoading && <CircularProgress />}\n      {error && <p>{error}</p>}\n      {contacts.length > 0 && (\n        <Typography>Total contacts: {contacts.length}</Typography>\n      )}\n      {contacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => (\n          <ListItem\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              maxWidth: 640,\n              mb: 1,\n            }}\n            key={id}\n            divider\n          >\n            <Avatar sx={{ bgcolor: 'purple' }}>{getFirstLetter(name)}</Avatar>\n            <Typography>\n              {name}:{number}\n            </Typography>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"secondary\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              <MdDelete />\n            </IconButton>\n          </ListItem>\n        ))}\n    </List>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from '../../redux/filter/filter-slice';\nimport { selectFilter } from '../../redux/selectors';\nimport { TextField, Box } from '@mui/material';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Box sx={{ padding: '20px' }}>\n      <TextField\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        placeholder=\"John\"\n        variant=\"outlined\"\n        label=\"Filter contacts by name\"\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport Filter from '../../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  const { contacts } = useSelector(selectContacts);\n  return (\n    <>\n      <ContactForm />\n      {contacts.length > 0 && <Filter />}\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","selectContacts","state","contacts","selectFilter","filter","text","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","contact","trim","addContact","TextField","onChange","type","pattern","title","required","autoComplete","placeholder","margin","label","Button","size","sx","mt","border","ContactList","isLoading","error","useEffect","fetchContacts","getFirstLetter","charAt","toUpperCase","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","List","padding","CircularProgress","length","Typography","map","id","ListItem","display","alignItems","justifyContent","maxWidth","mb","divider","Avatar","bgcolor","IconButton","color","onClick","deleteContact","Filter","Box","updateFilter","variant"],"sourceRoot":""}